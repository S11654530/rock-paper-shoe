# 04_RockPaperScissor, Ronald Durham , v1.0
import random

# Declare Varibles
p1Choice = ""
cpuChoice = ""
p1Score = 0
cpuScore = 0

choices = [
    "rock"
    "paper"
    "scissors"
   
    ]


# Define Functions
def displayInstruction():
    print("+***************************************************+")
    print("Welcome to Ronald Rock - Paper - Scissors Simulator! +")
    print("+ For this game, you will chooe Rock, Paper, or     +")
    print("+ Scissors!                                         +")
    print("+The rules of this game are:                        +")
    print("+Rock Beats Scissors                                +")
    print("+Scissors beats Paper                               +")
    print("+                                                   +")
    print("+                                                   +")
    print("+If you even, you will score 1 point.               +")
    print("+ The first player to score 3 points will win       +")


def cpuRPS():
    return choices[random,randint(0,2)]

def playerRPS()
    print("Ok, it's time play Rock, Paper Scissors!")
    choice = input("Choose one and type rock, paper, or scissors")
    print(f"You have selected {choice}.")
    while True:
        correct = input("Is that corrct y/ n\n")
        correct = correct[0].lower()  
        if correct == "y":
            break
        else:
            choice = input("Choose one and type rock, paper, or scissors")  
        choice = choice[0].lower()
        return choice    

def determineRoundWinner(p1Choice, cpuChoice):
    print(f"YOu have chosen {p1Choice}. The CPU coose {cpuChoice}.")
    if p1Choice == "r" and cpuChoice == "p":
        print(f"Paper beats rock, so you have lost!\n")
        roundWinner = "cpu"
    elif p1Choice == "r" and cpuChoice == "s":
        print(f"Rock beats scissors, so you have won!\n")
        roundWinner = "player"
    elif p1Choice == "r" and cpuChoice == "r":
        print(f"This is a draw!\n")
         roundWinner = "draw"
    elif p1Choice == "p" and cpuChoice == "s":
         print(f"This is a draw!\n")
         roundWinner = "draw"
    elif p1Choice == "p" and cpuChoice == "s":
        print(f"Scisscors beat paper, so you have lost!\n")
        roundWinner = "cpu"
    elif p1Choice == "p" and cpuChoice == "r":
        print(f"paper beats rock, so you have won!\n ")
        roundWinner = "player"
    elif p1Choice = "s" and cpuChoice == "p":
        print (f"Scissors beats paper, so you have won!\n")
        roundWinner = "player"
    elif p1Choice == "s" and cpuChoice == "s":
        print(f"This is a draw!\n")
        roundWinner = "draw"
    elif p1Choice == "s" and cpuChoice == "r":
        print(f"Rock beats scissors, so you have lost\n")
        roundWinner = "cpu"
    else:              
        print("Something terrible has happended! Please restart.\n")
        exit()
    return roundWinner

def calcScore(roundWinner):
    if roundWinner == "player"
        p1Score = 1
        return p1Score
    elif roundWinner == "cpu"
    cpuScore = 1
        return cpuScore
    else:
        draws = 1
        return draws

def matchWinner(p1Score, cpuScore):
    if p1Score >= 5:
        print("Congratulations, you have won the match!")
        return True
    elif cpuScore >= 5:
        print("Unforunatley, you have lost to the CPU.\n")
        return True
    else:
        return False

def playGame(p1Score, cpuScore, draws):
    while True:
        cpuChoice = cpuRPS()
        p1Choice = playerRPS()
        roundWinner = determineRoundWinner(p1Choice, cpuChoice)
        if roundWinner == "player":
            p1Score += calcScore(roundWinner) #, p1Score, cpuScore, draws)
        if roundWinner == "cpu":
            cpuScore += calcScore(roundWinner) #, p1Score, cpuScore, draws)
        if roundWinner == "draw":
            draws += calcScore(roundWinner) #, p1Socre, cpuScore, draws)

        print(f"Player 1 Score: {p1Score}\n")
        print(f"CPU Score: {cpuScore}\n")
        print(f"Draws: {draws}\n")

        if matchWinner(p1Score, cpuScore) == True:
            break

playerGame(p1Score, cpuScore, draws)      